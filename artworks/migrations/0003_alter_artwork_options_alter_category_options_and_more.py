# Generated by Django 5.1.4 on 2025-01-03 14:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def create_default_artist(apps, schema_editor):
    """Create a default artist and assign to existing artworks."""
    User = apps.get_model('auth', 'User')
    Artist = apps.get_model('artworks', 'Artist')
    Artwork = apps.get_model('artworks', 'Artwork')

    # Create a default user and artist
    default_user, _ = User.objects.get_or_create(username='default_artist', email='artist@example.com')
    default_artist, _ = Artist.objects.get_or_create(user=default_user, bio='Default artist for existing artworks.')

    # Assign default artist to artworks
    Artwork.objects.filter(artist__isnull=True).update(artist=default_artist)


class Migration(migrations.Migration):

    dependencies = [
        ('artworks', '0002_alter_category_options'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='artwork',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='category',
            options={'ordering': ['name'], 'verbose_name_plural': 'Categories'},
        ),
        migrations.AddField(
            model_name='artwork',
            name='availability',
            field=models.BooleanField(default=True),
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True)),
                ('portfolio_url', models.URLField(blank=True, null=True)),
                ('subscription_status', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='artist_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Artists',
            },
        ),
        migrations.AddField(
            model_name='artwork',
            name='artist',
            field=models.ForeignKey(
                null=True,  # Allow null during migration
                on_delete=django.db.models.deletion.CASCADE,
                related_name='artworks',
                to='artworks.artist',
            ),
        ),
        migrations.RunPython(create_default_artist),  # Create default artist and update artworks
        migrations.AlterField(
            model_name='artwork',
            name='artist',
            field=models.ForeignKey(
                null=False,  # Enforce the foreign key constraint after updating data
                on_delete=django.db.models.deletion.CASCADE,
                related_name='artworks',
                to='artworks.artist',
            ),
        ),
        migrations.CreateModel(
            name='Patron',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_history', models.ManyToManyField(blank=True, related_name='purchased_by', to='artworks.artwork')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patron_profile', to=settings.AUTH_USER_MODEL)),
                ('wishlist', models.ManyToManyField(blank=True, related_name='wishlisted_by', to='artworks.artwork')),
            ],
            options={
                'verbose_name_plural': 'Patrons',
            },
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='open', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commissions', to='artworks.artist')),
                ('patron', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commissions', to='artworks.patron')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('subscription', 'Subscription'), ('commission', 'Commission')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('pending', 'Pending')], default='success', max_length=20)),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='artworks.artist')),
                ('artwork', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='artworks.artwork')),
                ('commission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='artworks.commission')),
                ('patron', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='artworks.patron')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
